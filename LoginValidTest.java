// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class LoginValidTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void loginValid() {
    // Test name: LoginValid
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.saucedemo.com/");
    // 2 | setWindowSize | 1324x741 | 
    driver.manage().window().setSize(new Dimension(1324, 741));
    // 3 | click | css=*[data-test="username"] | 
    driver.findElement(By.cssSelector("*[data-test=\"username\"]")).click();
    // 4 | type | css=*[data-test="username"] | standard_user
    driver.findElement(By.cssSelector("*[data-test=\"username\"]")).sendKeys("standard_user");
    // 5 | click | css=*[data-test="password"] | 
    driver.findElement(By.cssSelector("*[data-test=\"password\"]")).click();
    // 6 | type | css=*[data-test="password"] | secret_sauce
    driver.findElement(By.cssSelector("*[data-test=\"password\"]")).sendKeys("secret_sauce");
    // 7 | click | css=*[data-test="login-button"] | 
    driver.findElement(By.cssSelector("*[data-test=\"login-button\"]")).click();
    // 8 | click | css=.app_logo | 
    driver.findElement(By.cssSelector(".app_logo")).click();
    // 9 | click | css=.app_logo | 
    driver.findElement(By.cssSelector(".app_logo")).click();
    // 10 | click | css=.inventory_item:nth-child(1) .inventory_item_desc | 
    driver.findElement(By.cssSelector(".inventory_item:nth-child(1) .inventory_item_desc")).click();
    // 11 | assertElementPresent | xpath=//div[@id='header_container']/div/div[2]/div | 
    {
      List<WebElement> elements = driver.findElements(By.xpath("//div[@id=\'header_container\']/div/div[2]/div"));
      assert(elements.size() > 0);
    }
  }
}
